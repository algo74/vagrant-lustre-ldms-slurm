# -*- mode: ruby -*-
# vi: ft=ruby:shiftwidth=2 

cur_dir = File.dirname(File.dirname(File.expand_path(__FILE__)))
load "%s/%s" % [cur_dir,"common_vars.rb"]

VB_VERSION = /[0-9]+\.[0-9]+\.[0-9]+/.match(`VBoxManage --version`)

$install_guest_addition = <<SCRIPT
set -xe
curl -o VBoxGuestAdditions.iso http://download.virtualbox.org/virtualbox/#{VB_VERSION}/VBoxGuestAdditions_#{VB_VERSION}.iso
mkdir /media/VBoxGuestAdditions
mount -o loop,ro VBoxGuestAdditions.iso /media/VBoxGuestAdditions
sh /media/VBoxGuestAdditions/VBoxLinuxAdditions.run
rm VBoxGuestAdditions.iso
sudo umount /media/VBoxGuestAdditions
sudo rmdir /media/VBoxGuestAdditions
SCRIPT

Vagrant.configure("2") do |config|  
  config.vm.box = "centos/7"
  config.vm.box_version = "2004.01"
  config.vm.box_url = 'centos/7'  
  config.vm.provider "virtualbox" do |v|
    v.memory = 1024
    v.cpus = 1
  end
  
  config.vm.synced_folder ".", "/vagrant", disabled: true

  config.vm.provision :shell, name: "useradd slurm", :inline => "useradd -u 1001 slurm" 
  config.vm.provision :shell, name: "hostname", :inline => "hostname basenode", run: "always"
  config.vm.provision :shell, name: "etc_hosts", :inline => $etc_hosts
  config.vm.provision :shell, name: "yum_problem_making_ssl_connection", :inline => $yum_problem_making_ssl_connection
  config.vm.provision :shell, name: "epel7", :inline => $epel7
  config.vm.provision :shell, name: "create_repo_lustre_client", :inline => $create_repo_lustre_client
  config.vm.provision :shell, name: "install perl before installing kernel", :inline => "yum -y install perl"
  config.vm.provision :shell, name: "install_lustre_client_kernel", :inline => $install_lustre_client_kernel
  config.vm.provision :shell, name: "install yum-plugin-versionlock", :inline => "yum -y install yum-plugin-versionlock"
  config.vm.provision :shell, name: "kernel_version_lock", :inline => $kernel_version_lock
  config.vm.provision :shell, name: "install dev tools", :path => "build_scripts/install_dev_tools.sh"
  config.vm.provision :shell do |shell|
          shell.name = 'reboot'
          shell.privileged = true
          shell.inline = 'echo rebooting'
          shell.reboot = true
  end
  config.vm.provision :shell, name: "install guest addition", :inline => $install_guest_addition 
  config.vm.provision :shell, name: "install lustre-client", :inline => "yum -y --nogpgcheck --enablerepo=lustre-client install lustre-client kmod-lustre-client"
  config.vm.provision :shell, name: "versionlock lustre-client", :inline => "yum versionlock lustre-client"
  config.vm.provision :shell, name: "mkdir -p /lustre", :inline => "mkdir -p /lustre"


  config.vm.provision :shell, :inline => $systemctl_stop_firewalld, run: "always"
  config.vm.provision :shell, :inline => $setenforce_0, run: "always"
  
  config.vm.provision :shell, :inline => "mkdir /source; chmod 777 /source"
  config.vm.provision :shell, name: "install LDMS", privileged: false, :path => "build_scripts/install_ldms.sh"
  config.vm.provision :shell, name: "install Slurm", privileged: false, :path => "build_scripts/install_slurm.sh"
  
end
